name: macOS

# Controls when the action will run.
on:
  # Triggers the workflow on events but only for branches.
  push:
    branches: [master, develop]
  pull_request:
    branches: [master, develop]

  # Allows you to run this workflow manually from the Actions tab.
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on

    strategy:
      matrix:
        os: [macos-latest]
        build_type: [Debug, Release]
        cxx: [g++-8, g++-9, g++-10, clang++]
        cxxstd: [20]

    runs-on: ${{matrix.os}}
    env:
      CXX: ${{matrix.cxx}}
      CPATH: /usr/local/include
      GTEST_SRC_DIR: ${{github.workspace}}/third_party/googletest
      FMT_SRC_DIR: ${{github.workspace}}/third_party/fmt
      SPDLOG_SRC_DIR: ${{github.workspace}}/third_party/spdlog
      MODULE_PREFIX: ${{github.workspace}}/third_party/module

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup packages
        run: |
          brew update
          sudo rm '/usr/local/bin/2to3'
          brew upgrade
          brew link --overwrite python@3.9
          brew install -f ninja gmp

      - name: Download googletest
        run: git clone https://github.com/google/googletest.git -b release-1.10.0 --depth 1 $GTEST_SRC_DIR

      - name: Download libfmt
        run: git clone https://github.com/fmtlib/fmt.git -b 7.1.3 --depth 1 $FMT_SRC_DIR

      - name: Download libspdlog
        run: git clone https://github.com/gabime/spdlog.git -b v1.8.2 --depth 1 $SPDLOG_SRC_DIR

      - name: Install googletest
        run: |
          cd $GTEST_SRC_DIR
          cmake -G Ninja \
            -DCMAKE_BUILD_TYPE=${{matrix.build_type}} \
            -DCMAKE_CXX_STANDARD=${{matrix.cxxstd}} \
            $GTEST_SRC_DIR
          sudo cmake --build . --target install

      - name: Install libfmt
        run: |
          cd $FMT_SRC_DIR
          cmake -G Ninja \
            -DCMAKE_BUILD_TYPE=${{matrix.build_type}} \
            -DCMAKE_INSTALL_PREFIX=$MODULE_PREFIX \
            -DCMAKE_CXX_STANDARD=${{matrix.cxxstd}} \
            $FMT_SRC_DIR
          cmake --build . --target install

      - name: Install libspdlog
        run: |
          cd $SPDLOG_SRC_DIR
          cmake -G Ninja \
            -DCMAKE_BUILD_TYPE=${{matrix.build_type}} \
            -DCMAKE_INSTALL_PREFIX=$MODULE_PREFIX \
            -DCMAKE_CXX_STANDARD=${{matrix.cxxstd}} \
            $SPDLOG_SRC_DIR
          cmake --build . --target install

      - name: Config and Build
        run: |
          cmake -E make_directory build
          cd build
          cmake -G Ninja \
            -DCMAKE_BUILD_TYPE=${{matrix.build_type}} \
            -DCMAKE_CXX_STANDARD=${{matrix.cxxstd}} \
            ..
          cmake --build .

      - name: Show logs when failed
        if: ${{failure()}}
        run: |
          cat "${{github.workspace}}/build/CMakeFiles/CMakeOutput.log"
          echo ++++
          cat "${{github.workspace}}/build/CMakeFiles/CMakeError.log"

      - name: Test
        run: cd build; ctest
