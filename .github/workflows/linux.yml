# This is a basic workflow to help you get started with Actions

name: Linux CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches:
      - master
      - develop
      - "feature/**"
  pull_request:
    branches: [master, develop]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-18.04]
        build_type: [Debug, Release]
        cxx: [g++-8, g++-9, g++-10, clang++-10]
        cxxstd: [20]

    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    env:
      MODULE_PREFIX: ${{github.workspace}}/third_party/module
      CXX: ${{ matrix.cxx }}
      BUILD_DIR: ${{ github.workspace }}/00.BUILD
      CONAN: /home/runner/.local/bin/conan

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup packages
        run: |
          sudo apt-get update -q -y > /dev/null
          sudo apt-get install -q -y build-essential ninja-build cmake
          sudo apt-get install -q -y ${{ matrix.cxx }}

      - name: Install conan
        run: |
          python3 -m pip install --upgrade conan
          $CONAN user

      - name: Setup conan
        run: |
          cd $GITHUB_WORKSPACE
          mkdir -p $BUILD_DIR && cd $BUILD_DIR
          $CONAN install .. --build=missing -s compiler.libcxx=libstdc++11 -s build_type=${{ matrix.build_type }}

      - name: Configure
        run: |
          cmake --version
          cmake -S $GITHUB_WORKSPACE -B $BUILD_DIR -G Ninja \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -DCMAKE_INSTALL_PREFIX=$MODULE_PREFIX \
            -DCMAKE_CXX_STANDARD=${{ matrix.cxxstd }}

      - name: Build
        run: |
          cmake --build $BUILD_DIR

      - name: Test
        run: |
          cd $BUILD_DIR && ctest -C ${{ matrix.build_type }} --output-on-failure -j
